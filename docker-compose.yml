version: '3.8'

networks:
  mawen-network:
    driver: bridge

services:
  mawen-web:
    build: .
    ports:
      - "8089:8080"
    environment:
      - FLASK_ENV=production
      - STORAGE_BACKEND=minio
      - MINIO_ENDPOINT=mawen-minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=mawenhouse
      - MINIO_SECURE=0
      - MINIO_REGION=us-east-1
      - REDIS_URL=redis://mawen-redis:6379/0
    depends_on:
      - mawen-redis
      - mawen-minio
    networks:
      - mawen-network
    restart: unless-stopped
    command: >
      sh -c "
      echo 'Attente de MinIO...';
      until curl -f http://mawen-minio:9000/minio/health/live; do
        echo 'MinIO pas encore prêt, attente...';
        sleep 2;
      done;
      echo 'MinIO est prêt, création du bucket...';
      until mc alias set local http://mawen-minio:9000 minioadmin minioadmin && mc mb local/mawenhouse --ignore-existing; do
        echo 'Tentative de création du bucket...';
        sleep 2;
      done;
      echo 'Bucket créé, démarrage de l\'application...';
      gunicorn --bind 0.0.0.0:8080 --workers 2 --threads 4 --worker-class gthread run:app
      "

  mawen-redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --appendfsync everysec
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - mawen-redis-data:/data
    networks:
      - mawen-network
    restart: unless-stopped

  mawen-minio:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9002:9000"
      - "9003:9001"
    volumes:
      - mawen-minio-data:/data
    networks:
      - mawen-network
    restart: unless-stopped


volumes:
  mawen-redis-data:
  mawen-minio-data:
